name: Setup Qt
description: Setup Qt from Taskcluster artifacts
inputs:
  dest:
    description: 'Destination path'
    required: true
    default: ${{ github.workspace }}/3rdparty
  toolchain-alias:
    description: 'Taskcluster toolchain alias'
    required: false
    default: ${{ runner.os == 'Windows' && 'qt-windows-x86_64-6.6' || 'qt-macos-6.6' }}
  cache:
    description: 'Cache Qt toolchain artifacts'
    required: false
    default: ${{ runner.os == 'Windows' }}
runs:
  using: "composite"
  steps:
    - name: Resolve artifact task
      id: resolve
      shell: bash
      working-directory: ${{ runner.temp }}
      env:
        QT6_TOOLCHAIN_INDEX: mozillavpn.v2.mozillavpn.cache.level-3.toolchains.v3.${{ inputs.toolchain-alias }}.latest
      run: |
        curl -sSL "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/${QT6_TOOLCHAIN_INDEX}" -o qt-toolchain-task.json
        TASKID=$(jq -r '.taskId' qt-toolchain-task.json)

        curl -sSL "https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/${TASKID}/artifacts" -o qt-toolchain-artifacts.json
        NAME=$(jq -r '.artifacts[].name | select(endswith(".tar.xz"))' qt-toolchain-artifacts.json)

        echo "taskid=${TASKID}" >> $GITHUB_OUTPUT
        echo "filename=${NAME}" >> $GITHUB_OUTPUT

    # Tar extraction is painfully slow on Windows, so use a cache instead.
    - name: Cache Qt toolchain
      uses: actions/cache/restore@v4
      id: qt-toolchain-cache
      if: ${{ inputs.cache == 'true' }}
      with:
        path: ${{ inputs.dest }}
        key: qt-toolchain-${{ steps.resolve.outputs.taskid }}
        enableCrossOsArchive: true

    - name: Install xzutils for Windows
      if: ${{ runner.os == 'Windows' && steps.qt-toolchain-cache.outputs.cache-hit != 'true' }}
      shell: bash
      working-directory: ${{ runner.temp }}
      env:
        XZ_UTILS_URL: https://github.com/tukaani-project/xz/releases/download/v5.8.1/xz-5.8.1-windows.zip
      run: |
        curl -sSL ${XZ_UTILS_URL} -o xz-5.8.1-windows.zip
        unzip -q xz-5.8.1-windows.zip
        echo "${{ runner.temp }}/xz-5.8.1-windows/bin_x86-64" >> $GITHUB_PATH

    - name: Install Qt toolchain
      if: ${{ inputs.cache != 'true' || steps.qt-toolchain-cache.outputs.cache-hit != 'true' }}
      id: qt-toolchain-install
      working-directory: ${{ inputs.dest }}
      shell: bash
      env:
        QT6_TOOLCHAIN_URL: https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/${{ steps.resolve.outputs.taskid }}/artifacts/${{ steps.resolve.outputs.filename }}
      run: |
        FILENAME=$(basename "${QT6_TOOLCHAIN_URL}")
        curl -sSL "${QT6_TOOLCHAIN_URL}" -o ${FILENAME}
        tar -xf ${FILENAME}
        echo "cache-path=$(tar -tf ${FILENAME} | head -1 | grep -o '^[^/]*')" >> $GITHUB_OUTPUT

    - name: Save Qt toolchain
      uses: actions/cache/save@v4
      if: ${{ inputs.cache == 'true' && steps.qt-toolchain-cache.outputs.cache-hit != 'true'}}
      with:
        path: ${{ inputs.dest }}/${{ steps.qt-toolchain-install.outputs.cache-path }}
        key: qt-toolchain-${{ steps.resolve.outputs.taskid }}
        enableCrossOsArchive: true
