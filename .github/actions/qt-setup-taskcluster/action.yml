name: Setup Qt
description: Setup Qt from Taskcluster artifacts
inputs:
  dest:
    description: 'Destination path'
    required: true
    default: ${{ github.workspace }}/3rdparty
  toolchain-alias:
    description: 'Taskcluster toolchain alias'
    required: false
    default: ${{ runner.os == 'Windows' && 'qt-windows-x86_64-6.6' || 'qt-macos-6.6' }}
  toolchain-artifact:
    description: 'Taskcluster toolchain artifact'
    required: false
    default: ${{ runner.os == 'Windows' && 'qt6_win.tar.xz' || 'qt6_macos.tar.xz' }}
runs:
  using: "composite"
  steps:
    - name: Resolve artifact task
      shell: bash
      working-directory: ${{ runner.temp }}
      env:
        QT6_TOOLCHAIN_INDEX: mozillavpn.v2.mozillavpn.cache.level-3.toolchains.v3.${{ inputs.toolchain-alias }}.latest
      run: |
        curl -sSL "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/${QT6_TOOLCHAIN_INDEX}" -o qt-toolchain-task.json
        echo "QT6_TOOLCHAIN_TASKID=$(jq -r '.taskId' qt-toolchain-task.json)" >> $GITHUB_ENV

    # Tar extraction is painfully slow on Windows, so use a cache instead.
    - name: Cache Qt for Windows
      uses: actions/cache/restore@v4
      id: qt-windows-cache
      if: ${{ runner.os == 'Windows' }}
      with:
        path: ${{ inputs.dest }}/qt-windows
        key: qt-windows-${{ env.QT6_TOOLCHAIN_TASKID }}
        enableCrossOsArchive: true

    - name: Install xzutils for Windows
      if: ${{ runner.os == 'Windows' && steps.qt-windows-cache.outputs.cache-hit != 'true' }}
      shell: bash
      working-directory: ${{ runner.temp }}
      env:
        XZ_UTILS_URL: https://github.com/tukaani-project/xz/releases/download/v5.8.1/xz-5.8.1-windows.zip
      run: |
        curl -sSL ${XZ_UTILS_URL} -o xz-5.8.1-windows.zip
        unzip -q xz-5.8.1-windows.zip
        echo "${{ runner.temp }}/xz-5.8.1-windows/bin_x86-64" >> $GITHUB_PATH

    - name: Install Qt toolchain
      if: ${{ runner.os != 'Windows' || steps.qt-windows-cache.outputs.cache-hit != 'true' }}
      working-directory: ${{ inputs.dest }}
      shell: bash
      env:
        QT6_TOOLCHAIN_URL: https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/${{ env.QT6_TOOLCHAIN_TASKID }}/artifacts/public/build/${{ inputs.toolchain-artifact }}
      run: |
        curl -sSL "$QT6_TOOLCHAIN_URL" -o ${{ inputs.toolchain-artifact }}
        tar -xf ${{ inputs.toolchain-artifact }}

    - name: Save Qt for Windows
      uses: actions/cache/save@v4
      if: ${{ runner.os == 'Windows' }}
      with:
        path: ${{ inputs.dest }}/qt-windows
        key: qt-windows-${{ env.QT6_TOOLCHAIN_TASKID }}
        enableCrossOsArchive: true
