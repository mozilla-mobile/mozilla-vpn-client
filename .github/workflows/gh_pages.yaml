name: GH Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  wasm_chrome: 
    name: Add Wasm_Chrome
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1.0.0
        with:
          deno-version: v1.x # Run with latest stable Deno.
      - name: Generate Dynamic Files
        run: |
         cd tools/wasm_chrome
         deno run --allow-all generate_branch_file.ts -T ${{ secrets.GITHUB_TOKEN }}
      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Wasm-Chrome
            path: tools/wasm_chrome

  logviewer: 
      name: Add Logviewer
      runs-on: ubuntu-20.04
      steps:
        - name: Clone repository
          uses: actions/checkout@v2
        - name: Uploading
          uses: actions/upload-artifact@v1
          with:
              name: Logviewer
              path: tools/logviewer

  inspector:
    name: Add Inspector
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Building
        shell: bash
        run: |
          cd tools/inspector
          npm install
          npm run build

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Inspector Build
            path: tools/inspector/dist
  addons:
    runs-on: ubuntu-20.04
    env:
      QTVERSION: 6.2.4

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          python3 -m pip install aqtinstall
          python3 -m aqt install-qt -O /opt linux desktop $QTVERSION

      - name: Install python dependencies
        shell: bash
        run: |
          pip3 install -r requirements.txt

      - name: Generating addons
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          python3 scripts/addon/generate_all.py

      - name: Sign manifest
        shell: bash
        env:
          ADDON_PRIVATE_KEY: ${{ secrets.ADDON_PRIVATE_KEY }}
        run: |
          echo -n "$ADDON_PRIVATE_KEY" > addon_private_key.pem
          openssl dgst -sha256 -sign addon_private_key.pem -out addons/generated/addons/manifest.json.sign addons/generated/addons/manifest.json
          rm addon_private_key.pem

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Addons
            path: addons/generated/addons

  ghPages:
    runs-on: ubuntu-20.04
    needs: [wasm_chrome, inspector,addons,logviewer]
    name: Compile Github Page from Components
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download Wasm-chrome
        uses: actions/download-artifact@v2.0.8
        with:
          name: Wasm-Chrome
          # Destination path
          path: _site

      - name: Download a Addons Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Addons
          path: _site/addons
      - name: Download the Logviewer Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Logviewer
          path: _site/logviewer

      - name: Download a Inspector Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Inspector Build
          path: _site/inspector

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  deploy:
      name: Deploy Github Page
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      needs: ghPages
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Deploy to GitHub Pages  
          id: deployment
          uses: actions/deploy-pages@v1