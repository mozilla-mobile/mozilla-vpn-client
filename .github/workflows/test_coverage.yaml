name: Unit Test Coverage
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'


jobs:
  unit-test:
    strategy:
      fail-fast: false # Don't cancel other jobs
      matrix:
        version: ["5.15.2","6.2.1"]
    runs-on: ubuntu-20.04
    name: "Run Unit tests on ${{matrix.version}}"
    steps:
      - name: Install Linux packages
        run: |
          sudo apt update
          sudo apt install git libgl-dev libegl-dev libpolkit-gobject-1-dev clang-10 liboath-dev python3 -y
          python3 -m pip install aqtinstall
          aqt install-qt --outputdir /opt linux desktop ${{matrix.version}} gcc_64 -m all

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Generating glean samples
        shell: bash
        run: |
          pip3 install -r requirements.txt
          python3 scripts/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          # Manually add QT executables to path
          export PATH=/opt/${{matrix.version}}/gcc_64/bin:$PATH
          python3 scripts/importLanguages.py

      - name: Compile
        shell: bash
        run: |
          # Manually add QT executables to path
           export PATH=/opt/${{matrix.version}}/gcc_64/bin:$PATH
          qmake CONFIG+=DUMMY QMAKE_CXX=clang++-10 QMAKE_LINK=clang++-10 CONFIG+=debug QT+=svg CONFIG+=webextension CONFIG+=coverage CONFIG+=AUTHTEST
          make -j8

      - name: Run the test script
        shell: bash
        run: |
          # Manually add QT executables to path
           export PATH=/opt/${{matrix.version}}/gcc_64/bin:$PATH
          export MVPN_API_BASE_URL="https://stage-vpn.guardian.nonprod.cloudops.mozgcp.net"
          ./scripts/test_coverage.sh -j 8
