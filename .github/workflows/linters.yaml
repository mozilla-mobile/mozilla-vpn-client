name: Linters (clang, l10n)
on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches:
      - main
      - 'releases/**'
    types: [ opened, synchronize, reopened ]

jobs:
  linter:
    runs-on: ubuntu-20.04
    env:
      QTVERSION: 6.2.4
    steps:
      - name: Install Linux packages
        run: |
          sudo apt update
          sudo apt install git libgl-dev libegl-dev libpolkit-gobject-1-dev clang-10 liboath-dev python3 -y
          python3 -m pip install aqtinstall
          aqt install-qt --outputdir /opt linux desktop $QTVERSION gcc_64 -m all

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Python dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Generating glean samples
        shell: bash
        run: |
          python3 scripts/utils/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          python3 scripts/utils/import_languages.py

      - name: Check for l10n errors
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          lupdate -version
          python .github/l10n/check_l10n_issues.py

      - name: Check for QRC errors
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          python scripts/ci/check_qrc.py

      - name: Check for guide JSON syntax
        run: |
          python scripts/ci/check_jsonschema.py guide.json src/ui/guides

      - name: Check for tutorial JSON syntax
        run: |
          python scripts/ci/check_jsonschema.py tutorial.json src/ui/tutorials

      - name: Check for issues with clang-format
        uses: DoozyX/clang-format-lint-action@v0.11
        with:
          source: '.'
          clangFormatVersion: 11
          style: file
  ktlint:
    name: Run ktLint
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: ktlint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Change reporter
          android: true

  taskgraph:
    name: Test Taskgraph Definition
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Python dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install taskcluster-taskgraph==1.1.7 
      - name: Test main-push
        run: |
          taskgraph full --p taskcluster/test/params/main-push.yml 
      - name: Test pull-request
        run: |
          taskgraph full --p taskcluster/test/params/pull-request.yml
      - name: Test release-push
        run: |
          taskgraph full --p taskcluster/test/params/release-push.yml           
      - name: Test default parameters
        run: |
          taskgraph full
