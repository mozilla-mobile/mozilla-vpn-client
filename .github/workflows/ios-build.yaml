# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

name: iOS

on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

jobs:
  macos:
    name: iOS build
    runs-on: macos-latest
    env:
      QTVERSION: 6.2.4

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt6
        shell: bash
        run: |
          pip3 install aqtinstall
          aqt install-qt -O `pwd`/qt_ios mac desktop $QTVERSION -m qtcharts qtwebsockets qt5compat
          aqt install-qt -O `pwd`/qt_ios mac ios $QTVERSION -m qtcharts qtwebsockets qt5compat
          mv `pwd`/qt_ios/$QTVERSION/macos `pwd`/qt_ios/$QTVERSION/clang_64

      - name: Python dependencies
        shell: bash
        run: |
          pip3 install -r requirements.txt

      - name: Importing translation files
        shell: bash
        run: |
          export PATH=`pwd`/qt_ios/$QTVERSION/ios/bin:`pwd`/qt_ios/$QTVERSION/clang_64/bin:$PATH
          git submodule update --remote --depth 1 i18n
          python3 scripts/utils/import_languages.py -m -q "`pwd`/qt_ios/$QTVERSION/clang_64/bin"

      - name: Switch to newest go version
        shell: bash
        run: |
          rm /usr/local/bin/go
          rm /usr/local/bin/gofmt
          brew install go

      - name: Configuring the build
        shell: bash
        run: |
          export PATH=`pwd`/qt_ios/$QTVERSION/clang_64/bin:$PATH
          export PATH=`pwd`/qt_ios/$QTVERSION/ios/bin:$PATH
          export QT_IOS_BIN=`pwd`/qt_ios/$QTVERSION/ios/bin
          SHORTVERSION=$(cat version.pri | grep VERSION | grep defined | cut -d= -f2 | tr -d \ )
          FULLVERSION=$(echo $SHORTVERSION | cut -d. -f1).$(date +"%Y%m%d%H%M")
          cat > xcode.xconfig << EOF
          APP_ID_MACOS = org.mozilla.macos.FirefoxVPN
          LOGIN_ID_MACOS = org.mozilla.macos.FirefoxVPN.login-item
          GROUP_ID_IOS = group.org.mozilla.ios.Guardian
          APP_ID_IOS = org.mozilla.ios.FirefoxVPN
          NETEXT_ID_IOS = org.mozilla.ios.FirefoxVPN.network-extension
          EOF
          echo `which qmake`
          echo `qmake -v`
          echo `$QT_IOS_BIN/qmake -v`
          ./scripts/macos/apple_compile.sh ios -q "`pwd`/qt_ios/$QTVERSION/clang_64/bin"

      - name: Prebuilding Qt
        shell: bash
        run: |
          make -f "MozillaVPN.xcodeproj/qt_makeqmake.mak"
          make -f "MozillaVPN.xcodeproj/qt_preprocess.mak"

      - name: Compiling
        shell: bash
        run: xcodebuild build CODE_SIGN_IDENTITY="" CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO -project "MozillaVPN.xcodeproj"
