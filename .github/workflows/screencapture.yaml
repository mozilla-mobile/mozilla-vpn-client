name: Screencapture
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  screencapture:
    name: Screencapture
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Install Packages
        run: |
          sudo apt update
          sudo apt install jq -y
      
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Linux packages
        run: |
          # Add external PPA for Qt6 support on Ubuntu 20.04
          sudo add-apt-repository ppa:okirby/qt6-backports
          sudo apt update

          # Download the build and runtime package dependencies.
          sudo apt-get install -y \
               $(./scripts/linux/getdeps.py -a linux/debian/control.qt6)

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Generating glean samples
        shell: bash
        run: |
          pip3 install -r requirements.txt
          python3 scripts/utils/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          python3 scripts/utils/import_languages.py

      - name: Compile
        shell: bash
        run: |
          qmake6 CONFIG+=DUMMY QMAKE_CXX=clang++ QMAKE_LINK=clang++ CONFIG+=debug CONFIG+=inspector QT+=svg
          make -j$(nproc)

      - name: Install geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz -O geckodriver.tar.gz
          tar xvf geckodriver.tar.gz

      - name: Install node dependecies
        run: |
          npm install dotenv
          npm install selenium-webdriver
          npm install mocha
          npm install websocket

      - name: Launching API proxy
        shell: bash
        run: ./tests/proxy/wsgi.py --mock-devices > /dev/null &

      - name: Run the test script
        run: |
          export PATH=.:$(npm bin):$PATH
          export HEADLESS=yes
          export MVPN_API_BASE_URL="https://stage-vpn.guardian.nonprod.cloudops.mozgcp.net"
          xvfb-run -a npm run functionalTest -- tests/functional/testScreenCapture.js
        env:
          ACCOUNT_EMAIL: ${{ secrets.ACCOUNT_EMAIL }}
          ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}
          ARTIFACT_DIR: /tmp/artifacts
          MVPN_API_BASE_URL: http://localhost:5000
          MVPN_BIN: ./src/mozillavpn

#      - name: Uploading screenshots
#        uses: actions/upload-artifact@v1
#        with:
#            name: Screen capture
#            path: /tmp/screencapture
