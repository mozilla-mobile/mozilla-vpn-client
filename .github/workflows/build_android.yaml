# This is Just a reusable workflow to build an .apk out of the Client

name: Android APK BUild 
on:
  workflow_call:
    inputs:
      args:
        required: false
        type: string
      adjustToken:
        required: false
        type: string

jobs:
  compile-android:
    runs-on: ubuntu-20.04      
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          host: 'linux'
          version: '5.15.2'
          target: 'android'
          install-deps: 'true'
          modules: 'qtcharts qtnetworkauth'

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r20b

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Setup Glean Dependency
        shell: bash
        run: |
          pip3 install "glean_parser==3.5"
          pip3 install pyyaml

      - name: Compilation
        run: |
          export ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
          bash ./scripts/android_package.sh /home/runner/work/mozilla-vpn-client/Qt/5.15.2 -a ${{ adjustToken }} ${{ args }}
      - name: Sign Android
        if: ${{ !isDebugBuild }}
        env:
          AUTOGRAPH_TOKEN: ${{ secrets.AUTOGRAPH_KEY }}
        run: |
          bash ./scripts/android_sign.sh ${{ matrix.config.apk }}
          rm ${{ matrix.config.apk }}/*unsigned.apk

      - name: Upload APK${{ matrix.config.args }}
        uses: actions/upload-artifact@v1
        with:
            name: ${{ matrix.config.name }}-build
            path: ${{ matrix.config.apk }}
