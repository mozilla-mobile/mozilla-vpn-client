name: Functional tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  functionaltests:
    name: Functional tests
    runs-on: ubuntu-20.04
    steps:
      - name: Install Linux packages
        run: |
          # Add external PPA, latest version of QT is 5.12.x for Ubuntu 20.04
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal -y
          sudo apt update
          sudo apt install git qt515tools qt515svg qt515networkauth-no-lgpl qt515charts-no-lgpl libgl-dev libpolkit-gobject-1-dev qt515quickcontrols2 qt515graphicaleffects  qt515websockets -y
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Compile
        shell: bash
        run: |
          # Manually add QT executables to path
          export PATH=/opt/qt515/bin:$PATH
          qmake CONFIG+=DUMMY QMAKE_CXX=clang++ QMAKE_LINK=clang++ CONFIG+=debug CONFIG+=inspector QT+=svg
          make -j8
      - name: Install xvfb
        run: |
          sudo apt install xvfb -y
      - name: Install firefox
        run: |
          sudo apt install firefox -y
      - name: Install geckodriver
        run: |
          sudo apt install wget -y
          wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz -O geckodriver.tar.gz
          tar xvf geckodriver.tar.gz
      - name: Install node dependecies
        run: |
          npm install dotenv
          npm install selenium-webdriver
          npm install mocha
          npm install websocket
      - name: Run the test script
        run: |
          export PATH=.:$(npm bin):$PATH
          xvfb-run -a ./scripts/test_function.sh ./src/mozillavpn
        env:
          ACCOUNT_EMAIL: ${{ secrets.ACCOUNT_EMAIL }}
          ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}

