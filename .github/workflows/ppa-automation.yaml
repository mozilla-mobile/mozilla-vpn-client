name: PPA Automated Releases
on:
  push:
    branches:
      - 'releases/**'
    tags:
      - 'v[0-9]+.[0-9a-z]+.[0-9a-z]+'
  schedule:
    - cron: '0 5 * * *'

jobs:
  ppa-release-candidate:
    name: PPA Releases
    if: github.repository == 'mozilla-mobile/mozilla-vpn-client'
    runs-on: ubuntu-latest
    environment: PPA Automation
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install golang debhelper devscripts dput-ng -y
          pip3 install -r requirements.txt

      - name: Build source bundle
        id: gen-source
        shell: bash
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
          GNUPGHOME: ${{ runner.temp }}/gnupg-data
          GITREF: ${{github.ref}}
        run: |
          mkdir -m700 $GNUPGHOME
          echo "allow-preset-passphrase" > $GNUPGHOME/gpg-agent.conf
          gpgconf --kill gpg-agent

          echo "$GPG_PRIVATE_KEY" | gpg --import --batch
          KEYID=$(gpg --with-colons --list-keys | grep -m1 '^fpr:' | tr -d [fpr:])
          KEYGRIP=$(gpg --with-colons --with-keygrip --list-keys | grep -m1 '^grp:' | tr -d [grp:])

          echo "$GPG_PASSWORD" | /lib/gnupg2/gpg-preset-passphrase --preset $KEYGRIP
          ./scripts/linux/script.sh --sign-key $KEYID --source --gitref ${GITREF}

          if [[ "$GITREF" == "refs/heads/main" ]]; then
            if [[ ! -z $(git rev-list --after="25 hours" ${{github.sha}}) ]]; then
              echo "::set-output name=nightly-changes::true"
            fi
          fi

      - name: Uploading sources
        uses: actions/upload-artifact@v2
        with:
            name: Sources
            path: .tmp

      - name: Push to Launchpad Testing PPA
        shell: bash
        if: ${{ startsWith(github.ref, 'refs/heads/releases/') || startsWith(github.ref, 'refs/tags/v') }}
        env:
          PPA_URL: ppa:okirby/mozilla-vpn-testing
          GNUPGHOME: ${{ runner.temp }}/gnupg-data
        run: |
          for changeset in $(find .tmp -name '*_source.changes'); do
            dput $PPA_URL $changeset
          done

      - name: Push to Launchpad Nightly PPA
        shell: bash
        if: ${{ steps.gen-source.outputs.nightly-changes == 'true' }}
        env:
          PPA_URL: ppa:okirby/mozilla-vpn-nightly
          GNUPGHOME: ${{ runner.temp }}/gnupg-data
        run: |
          for changeset in $(find .tmp -name '*_source.changes'); do
            dput $PPA_URL $changeset
          done
