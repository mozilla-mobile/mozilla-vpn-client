name: WebAssembly

on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  wasmQt6:
    name: Wasm Qt6
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.testGen.outputs.tests }}
    env:
      QTVERSION: 6.2.4

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          python3 -m pip install aqtinstall
          # qt6.2.3 for wasm needs the desktop linux installation
          python3 -m aqt install-qt -O /opt linux desktop $QTVERSION
          python3 -m aqt install-qt -O /opt linux desktop $QTVERSION wasm_32 -m qtcharts qtwebsockets qt5compat

      - name: Install python dependencies
        shell: bash
        run: |
          pip install -r requirements.txt

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v7

      - name: Compiling
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/wasm_32/bin:/opt/$QTVERSION/gcc_64/bin:$PATH
          mkdir build
          /opt/$QTVERSION/wasm_32/bin/qt-cmake -S . -B build -DQT_HOST_PATH=/opt/$QTVERSION/gcc_64 -DQT_HOST_PATH_CMAKE_DIR=/opt/$QTVERSION/gcc_64/lib/cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j4
          cp $(pwd)/build/src/mozillavpn.wasm wasm
          cp $(pwd)/build/src/mozillavpn.js wasm
          cp $(pwd)/build/src/qtloader.js wasm
          cp $(pwd)/tests/functional/fxa_endpoints.js wasm
          cp $(pwd)/tests/functional/guardian_endpoints.js wasm
          cp -r $(pwd)/tools/logviewer wasm

      - name: Generate tasklist
        id: testGen
        shell: bash
        run: |
          echo -n "::set-output name=tests::"
          for test in $(find tests/functional -name 'test*.js' | sort); do
            grep "$(basename ${test%.js})" tests/functional/wasm-test-ignore &>/dev/null || printf '{"name": "%s", "path": "%s"}' $(basename ${test%.js} | sed -n 's/test//p') $test
          done | jq -s -c

      - name: Check tests
        shell: bash
        env:
          TEST_LIST: ${{ steps.testGen.outputs.tests }}
        run: |
          echo $TEST_LIST | jq

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: WebAssembly Build Qt6
            path: wasm

  inspector:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Building
        shell: bash
        run: |
          cd tools/inspector
          npm install
          npm run build

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Inspector Build
            path: tools/inspector/dist

  addons:
    runs-on: ubuntu-20.04
    env:
      QTVERSION: 6.2.4

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          python3 -m pip install aqtinstall
          python3 -m aqt install-qt -O /opt linux desktop $QTVERSION

      - name: Install python dependencies
        shell: bash
        run: |
          pip3 install -r requirements.txt

      - name: Generating addons
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          python3 scripts/addon/generate_all.py

      - name: Sign manifest
        shell: bash
        env:
          ADDON_PRIVATE_KEY: ${{ secrets.ADDON_PRIVATE_KEY }}
        run: |
          echo -n "$ADDON_PRIVATE_KEY" > addon_private_key.pem
          openssl dgst -sha256 -sign addon_private_key.pem -out addons/generated/addons/manifest.json.sign addons/generated/addons/manifest.json
          rm addon_private_key.pem

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Addons
            path: addons/generated/addons

  ghPages:
    runs-on: ubuntu-20.04
    needs: [wasmQt6, inspector, addons]
    name: Publish Wasm on Github Pages
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: WebAssembly Build Qt6
          # Destination path
          path: _site

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Addons
          path: _site/addons

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Inspector Build
          path: _site/inspector

      - name: Uploading site Build
        uses: actions/upload-artifact@v1
        with:
            name: GH-Pages Build
            path: _site

      - name: GH Pages deploy
        uses: Cecilapp/GitHub-Pages-deploy@3.1.0
        if: github.ref == 'refs/heads/main'  # Only publish on main branch.
        with:
          # A verified email.
          email: sstreich@mozilla.com
          # Where static files are.
          build_dir: _site

  functionaltests:
    name: Functional tests
    needs:
      - wasmQt6
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    strategy:
      fail-fast: false # Don't cancel other jobs if a test fails
      matrix:
        test: ${{ fromJson(needs.wasmQt6.outputs.matrix) }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: build/
          key: ${{ github.sha }}

      - name: Install dependecies
        run: |
          sudo apt install --no-upgrade firefox xvfb -y
          pip3 install -r requirements.txt
          npm install

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: WebAssembly Build Qt6
          # Destination path
          path: wasm

      - uses: browser-actions/setup-geckodriver@latest

      - name: Running ${{matrix.test.name}} Tests
        id: runTests
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: |
            export PATH=$GECKOWEBDRIVER:$(npm bin):$PATH
            export HEADLESS=yes
            xvfb-run -a npm run functionalTestWasm -- ${{matrix.test.path}}
