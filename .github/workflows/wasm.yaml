name: WebAssembly

on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

jobs:
  wasm:
    runs-on: ubuntu-20.04

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          python3 -m pip install aqtinstall
          python3 -m aqt install --outputdir /opt 5.15.2 linux desktop wasm_32 -m qtcharts

      - name: Install python dependencies
        shell: bash
        run: |
          pip install -r requirements.txt

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v7
        with:
          version: 1.39.8

      - name: Compiling
        shell: bash
        run: |
          export PATH=/opt/5.15.2/wasm_32/bin:$PATH
          ./scripts/wasm_compile.sh

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: WebAssembly Build Qt5
            path: wasm

  wasmQt6:
    name: Wasm Qt6
    runs-on: ubuntu-20.04

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          python3 -m pip install aqtinstall
          # qt6.2.1 for wasm needs the desktop linux installation
          python3 -m aqt install --outputdir /opt 6.2.1 linux desktop
          python3 -m aqt install --outputdir /opt 6.2.1 linux desktop wasm_32 -m qtcharts qtwebsockets qt5compat

      - name: Patching Qt
        shell: bash
        run: |
          # see: https://wiki.qt.io/Qt_6.2_Known_Issues#WebAssembly
          sed '/sse/,+5 d' /opt/6.2.1/wasm_32/mkspecs/features/wasm/wasm.prf > /tmp/wasm.prf
          mv /tmp/wasm.prf /opt/6.2.1/wasm_32/mkspecs/features/wasm/wasm.prf

      - name: Install python dependencies
        shell: bash
        run: |
          pip install -r requirements.txt

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v7

      - name: Compiling
        shell: bash
        run: |
          export PATH=/opt/6.2.1/wasm_32/bin:/opt/6.2.1/gcc_64/bin:$PATH
          ./scripts/wasm_compile.sh

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: WebAssembly Build Qt6
            path: wasm

  inspector:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Building
        shell: bash
        run: |
          cd tools/inspector
          npm install
          npm run build

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Inspector Build
            path: tools/inspector/dist

  ghPages:
    runs-on: ubuntu-20.04
    needs: [wasm, wasmQt6, inspector]
    name: Publish Wasm on Github Pages
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: WebAssembly Build Qt5
          # Destination path
          path: _site
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: WebAssembly Build Qt6
          # Destination path
          path: _site/qt6
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: Inspector Build
          path: _site/inspector
      - name: Uploading site Build
        uses: actions/upload-artifact@v1
        with:
            name: GH-Pages Build
            path: _site

      - name: GH Pages deploy
        uses: Cecilapp/GitHub-Pages-deploy@3.1.0
        if: github.ref == 'refs/heads/main'  # Only publish on main branch.
        with:
          # A verified email.
          email: sstreich@mozilla.com
          # Where static files are.
          build_dir: _site
