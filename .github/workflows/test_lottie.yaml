name: Lottie Tests
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

# Restrict tests to the most recent commit.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux-lottie-tests:
    runs-on: ubuntu-22.04
    name: Run Lottie tests on Linux
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Install Linux packages
        run: |
          sudo apt-get update
          sudo apt-get install -y $(./scripts/linux/getdeps.py -a linux/debian/control)
      - name: Cache grcov
        id: cache-grcov
        uses: actions/cache@v3
        with:
          path: grcov-build/
          key: ${{runner.os}}-grcov-v0.8.13

      - name: Install Grcov
        if: steps.cache-grcov.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cargo install grcov --root ${{github.workspace}}/grcov-build --version 0.8.13

      - name: Building tests
        shell: bash
        run: |
          mkdir -p build
          cmake -S lottie -B $(pwd)/build -DBUILD_TESTING=ON \
            -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=--coverage
          cmake --build $(pwd)/build -j$(nproc)

      - name: Running tests
        shell: bash
        working-directory: ./build
        run: |
          export PATH=${{github.workspace}}/grcov-build/bin:$PATH
          ctest --output-on-failure

          grcov $(pwd)/tests/unit/CMakeFiles/lottie_tests.dir -s ${{github.workspace}} \
              -t lcov --branch --ignore-not-existing > ${{github.workspace}}/lottie_lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: .
          flags: lottie_tests
          name: codecov-poc
          files: lottie_lcov.info
          verbose: true

  macos-lottie-tests:
    runs-on: macos-latest
    name: Run Lottie tests on MacOS

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Qt6
        shell: bash
        run: |
          wget https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/mozillavpn.v2.mozillavpn.cache.level-3.toolchains.v3.qt-mac.latest/artifacts/public%2Fbuild%2Fqt6_mac.zip -O mac.zip
          unzip -a mac.zip
          sudo mv qt_dist /opt
          cd ..

      - name: Cache grcov
        id: cache-grcov
        uses: actions/cache@v3
        with:
          path: grcov-build/
          key: ${{runner.os}}-grcov-v0.8.13

      - name: Install Grcov
        if: steps.cache-grcov.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cargo install grcov --root ${{github.workspace}}/grcov-build --version 0.8.13

      - name: Building tests
        shell: bash
        run: |
          export PATH=/opt/qt_dist/bin:${{github.workspace}}/grcov-build/bin:$PATH
          mkdir -p build
          cmake -S lottie -B $(pwd)/build -DBUILD_TESTING=ON \
            -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=--coverage
          cmake --build $(pwd)/build

      - name: Running tests
        shell: bash
        working-directory: ./build
        run: |
          export PATH=/opt/qt_dist/bin:${{github.workspace}}/grcov-build/bin:$PATH
          ctest --output-on-failure

          grcov $(pwd)/tests/unit/CMakeFiles/lottie_tests.dir -s ${{github.workspace}} \
              -t lcov --branch --ignore-not-existing > ${{github.workspace}}/lottie_lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: .
          flags: lottie_tests
          name: codecov-poc
          files: lottie_lcov.info
          verbose: true

  windows-lottie-tests:
    name: Run Lottie tests on Windows
    runs-on: windows-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Qt
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/mozillavpn.v2.mozillavpn.cache.level-3.toolchains.v3.qt-win.latest/artifacts/public%2Fbuild%2Fqt6_win.zip -OutFile win.zip
          Expand-Archive win.zip
          mv win\QT_OUT "C:\\MozillaVPNBuild"

      - name: Add msvc dev commands to PATH
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Building tests
        shell: bash
        run: |
          export PATH=/c/MozillaVPNBuild/bin:$PATH
          mkdir -p build
          cmake -S lottie -B $(pwd)/build -DBUILD_TESTING=ON
          cmake --build $(pwd)/build --config Release

      - name: Running tests
        shell: bash
        working-directory: ./build
        run: |
          ctest --build-config Release --output-on-failure
