name: Unit Tests
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'


jobs:
  linux-unit-tests:
    runs-on: ubuntu-20.04
    env:
      QTVERSION: 6.2.4
    name: Run Unit tests on Linux
    steps:
      - name: Install Linux packages
        run: |
          sudo apt update
          sudo apt install git libgl-dev libegl-dev libpolkit-gobject-1-dev clang-10 liboath-dev python3 -y
          python3 -m pip install aqtinstall
          aqt install-qt --outputdir /opt linux desktop $QTVERSION gcc_64 -m all

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Generating glean samples
        shell: bash
        run: |
          pip3 install -r requirements.txt
          python3 scripts/utils/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          python3 scripts/utils/import_languages.py

      - name: Installing the oathtool
        shell: bash
        run: |
          pip3 install oathtool
          python3 -m oathtool.generate-script

      - name: Install Grcov
        shell: bash
        run: |
          cargo install grcov

      - name: Running tests
        shell: bash
        run: |
          export PATH=/opt/$QTVERSION/gcc_64/bin:$PATH
          MVPN_OATHTOOL=./oathtool ./scripts/tests/unit_tests.sh --grcov unit_lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: .
          flags: unit_tests
          name: codecov-poc
          files: unit_lcov.info
          verbose: true

  macos-unit-tests:
    runs-on: macos-latest
    name: Run Unit tests on MacOS

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt6
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git clone https://github.com/mozilla-mobile/qt_static_macos
          cd qt_static_macos
          cat qt6* > qt_static.tar.gz
          tar xf qt_static.tar.gz
          sudo mv qt6 /opt
          cd ..

      - name: Generating glean samples
        shell: bash
        run: |
          pip3 install -r requirements.txt
          python3 scripts/utils/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          export PATH=/opt/qt6/bin:$PATH
          python3 scripts/utils/import_languages.py -m

      - name: Install Grcov
        shell: bash
        run: |
          cargo install grcov

      - name: Installing the oathtool
        shell: bash
        run: |
          pip3 install oathtool
          python3 -m oathtool.generate-script
          # python3 by default...
          sed -i '' "s/python/python3/g" oathtool

      - name: Running tests
        shell: bash
        run: |
          export PATH=/opt/qt6/bin:$PATH
          MVPN_OATHTOOL=./oathtool ./scripts/tests/unit_tests.sh --grcov unit_lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: .
          flags: unit_tests
          name: codecov-poc
          files: unit_lcov.info
          verbose: true

  windows-unit-tests:
    name: Run Unit tests on Windows
    runs-on: windows-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install Qt
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git clone https://github.com/mozilla-mobile/qt_static_windows
          cd qt_static_windows
          cat qt6* > qt_static.tar.bz2
          tar xf qt_static.tar.bz2
          tar xf msm.tar.gz
          mkdir /c/MozillaVPNBuild
          cp -r * /c/MozillaVPNBuild
          cd ..
          cp /c/MozillaVPNBuild/SSL/bin/libssl-1_1-x64.dll .
          cp /c/MozillaVPNBuild/SSL/bin/libcrypto-1_1-x64.dll .
          cp /c/MozillaVPNBuild/*.msm .

      - name: Add msvc dev commands to PATH
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Install glean depedencies
        shell: bash
        run: |
          pip3 install -r requirements.txt
          python3 scripts/utils/generate_glean.py

      - name: Importing translation files
        shell: bash
        run: |
          export PATH=/c/MozillaVPNBuild/bin:$PATH
          python3 scripts/utils/import_languages.py -m

      - name: Installing the oathtool
        shell: bash
        run: |
          pip3 install oathtool
          python3 -m oathtool.generate-script

      - name: Running tests
        shell: bash
        run: |
          export PATH=/c/MozillaVPNBuild/bin:$PATH
          MVPN_OATHTOOL=oathtool ./scripts/tests/unit_tests.sh
