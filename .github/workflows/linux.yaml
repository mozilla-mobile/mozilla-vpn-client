name: Linux Packages
on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
      - 'releases/**'

jobs:
  source-bundle:
    name: Source Bundle
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Generate build version
        shell: bash
        env:
          GITREF: ${{github.ref}}
        run: |
          VERSION=$(grep ':VERSION' version.pri | cut -d= -f2 | tr -d '[:space:]')
          if [[ "$GITREF" =~ ^refs/pull/([0-9]+)/merge ]]; then
            BUILDREV="~pr${BASH_REMATCH[1]}"
          elif [[ "$GITREF" =~ ^refs/heads/releases/([0-9][^/]*) ]]; then
            git fetch --unshallow
            BUILDREV="~rc$(git rev-list --count --first-parent origin/main..HEAD)"
            VERSION=${BASH_REMATCH[1]}
          else
            BUILDREV="~github${{github.run_number}}"
          fi

          # Force the upstream package version
          sed -i "s/:VERSION.*/:VERSION = ${VERSION}${BUILDREV}/" version.pri

      - name: Install source dependencies
        shell: bash
        run: |
          sudo apt-get install golang debhelper -y
          pip3 install -r requirements.txt

      - name: Build source bundle
        shell: bash
        run: ./scripts/linux_script.sh --source

      - name: Uploading
        uses: actions/upload-artifact@v2
        with:
            name: Sources
            path: .tmp

  ubuntu-focal:
    name: Ubuntu Focal
    needs: source-bundle
    runs-on: ubuntu-20.04
    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v2
        with:
            name: Sources

      - name: Install Dependencies
        run: |
          # Add external PPA, latest version of QT is 5.12.x for Ubuntu 20.04
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal -y
          sudo apt-get install debhelper devscripts equivs -y
          pip3 install pyyaml

          for file in $(find focal/ -type f); do ln -s $file; done
          dpkg-source -x mozillavpn_*.dsc
          sudo mk-build-deps -ir mozillavpn-*/debian/control

      - name: Create package structure
        shell: bash
        run: |
          (cd mozillavpn-* && dpkg-buildpackage --build=binary --no-sign)
          mkdir packages
          cp *.deb packages

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Focal Build
            path: packages

  ubuntu-bionic:
    name: Ubuntu Bionic
    needs: source-bundle
    runs-on: ubuntu-18.04
    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v2
        with:
            name: Sources

      - name: Install Dependencies
        run: |
          # Add external PPA, latest version of QT is 5.12.x for Ubuntu 18.04
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-bionic -y
          sudo apt-get install debhelper devscripts equivs -y
          pip3 install pyyaml

          for file in $(find bionic/ -type f); do ln -s $file; done
          dpkg-source -x mozillavpn_*.dsc
          sudo mk-build-deps -ir mozillavpn-*/debian/control

      - name: Create package structure
        shell: bash
        run: |
          (cd mozillavpn-* && dpkg-buildpackage --build=binary --no-sign)
          mkdir packages
          cp *.deb packages

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: Bionic Build
            path: packages


  ubuntu-pbuilder:
    name: Ubuntu Packages
    needs: source-bundle
    strategy:
      matrix:
        config:
            - { name: "Hirsute", dist: hirsute }
            - { name: "Impish", dist: impish }

    runs-on: ubuntu-latest
    env:
      BASETGZ: /var/cache/pbuilder/ubuntu-buildd-${{ matrix.config.dist }}.tgz
    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v2
        with:
            name: Sources
      
      - name: Create base ${{ matrix.config.dist }} image
        run: |
          pip3 install pyyaml
          sudo apt-get install pbuilder debootstrap debhelper devscripts -y
          sudo pbuilder create --distribution ${{ matrix.config.dist }} --basetgz $BASETGZ --debootstrapopts --variant=buildd

      - name: Building package
        shell: bash
        run: |
          mkdir packages
          for file in $(find ${{matrix.config.dist}} -type f); do ln -s $file; done
          sudo pbuilder build --basetgz $BASETGZ --buildresult $(pwd)/packages mozillavpn_*.dsc

      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
            name: ${{matrix.config.name}} Build
            path: packages

  rpmbuild:
    name: RPM Packages
    needs: source-bundle
    runs-on: ubuntu-latest
    container:
      image: fedora:33

    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v2
        with:
            name: Sources

      - name: Install Build Dependencies
        run: |
          yum -y install rpm-build rpmdevtools yum-utils
          yum-builddep -y mozillavpn.spec

      - name: Building package
        shell: bash 
        run: rpmbuild -D "_topdir $(pwd)" -D "_sourcedir $(pwd)" -ba mozillavpn.spec

      - name: Uploading
        uses: actions/upload-artifact@v2
        with:
            name: RPM Build
            path: |
              RPMS/
              SRPMS/
