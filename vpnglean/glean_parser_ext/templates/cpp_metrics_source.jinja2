// -*- mode: C++ -*-

// AUTOGENERATED BY glean_parser.  DO NOT EDIT.
{# The rendered source is autogenerated, but this
Jinja2 template is not. Please file bugs! #}

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "glean/metrictypes.h"
#include "glean/generated/metrics.h

#include <QString>
#include <QObject>

{% import 'macros.jinja2' as macros %}

{% for category_name, objs in all_objs.items() %}
  {% for obj in objs.values() %}
  {% if obj|attr("_generate_enums") %}
{{ macros.generate_extra_keys_parser(obj, category_name) }}
  {%- endif %}
  {% endfor %}
{% endfor %}

{% for category_name, objs in all_objs.items() %}
class __DONOTUSE__{{ category_name|Camelize }} final {
  Q_GADGET

{% for obj in objs.values() %}
  Q_PROPERTY({{ obj|type_name }} {{obj.name|camelize }} READ {{ obj.name|camelize }} CONSTANT);
{% endfor %}

  public:
    __DONOTUSE__{{ category_name|Camelize }}() = default;
    ~__DONOTUSE__{{ category_name|Camelize }}() = default;

    {% for obj in objs.values() %}
    {{ obj|type_name }} {{obj.name|camelize }} () const { return m_{{obj.name|camelize }}; };
    {% endfor %}

  private:
    {% for obj in objs.values() %}
    {% if obj|attr("allowed_extra_keys_with_types")|length > 0 %}__DONOTUSE__{{ obj.name|Camelize }}ExtraParser m_{{obj.name|camelize }}ExtraParser;{%- endif %}
    {{ obj|type_name }} m_{{obj.name|camelize }} = {{ obj|type_name }}({{obj|metric_id}}{% if obj|attr("allowed_extra_keys_with_types")|length > 0 %}, &m_{{obj.name|camelize }}ExtraParser {%- endif %});
    {% endfor %}
};
{% endfor %}
