// -*- mode: C++ -*-

// AUTOGENERATED BY glean_parser.  DO NOT EDIT.
{# The rendered source is autogenerated, but this
Jinja2 template is not. Please file bugs! #}

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#ifndef mozilla_glean_Pings_h
#define mozilla_glean_Pings_h

#include "glean/metrictypes.h"

#include <QObject>

// This class is not meant to be used directly.
// It is exposed as a singleton to QML.
//
// The reason for this is to keep consistency with the Glean API on m-c.
// On JavaScript pings are accessed through GleanPings.<MyPing> and
// on C++ they are accessed through mozilla::glean_pings::<MyPing>.
class __DONOTUSE__GleanPings final : public QObject {
    Q_OBJECT
    Q_DISABLE_COPY_MOVE(__DONOTUSE__GleanPings)

    {% for obj in all_objs['pings'].values() %}
    Q_PROPERTY(Ping {{ obj.name|Camelize }} READ {{ obj.name|Camelize }} CONSTANT)
    {% endfor %}

    private:
        __DONOTUSE__GleanPings() = default;

    public:
        ~__DONOTUSE__GleanPings() = default;

        static __DONOTUSE__GleanPings* instance() {
            if (!s_instance) {
                s_instance = new __DONOTUSE__GleanPings();
            }

            return s_instance;
        }

        {% for obj in all_objs['pings'].values() %}
        Ping {{ obj.name|Camelize }} () const { return m_{{ obj.name|camelize }}; };
        {% endfor %}

    private:
        {% for obj in all_objs['pings'].values() %}
        Ping m_{{ obj.name|camelize }} = Ping({{ obj.name|ping_id }});
        {% endfor %}

        inline static __DONOTUSE__GleanPings* s_instance = nullptr;
};

namespace mozilla::glean_pings {
    {% for obj in all_objs['pings'].values() %}
    /*
     * Generated from {{ obj.name }}.
     *
     * {{ obj.description|wordwrap() | replace('\n', '\n * ') }}
     */
    inline Ping {{ obj.name|Camelize }} = __DONOTUSE__GleanPings::instance()->{{ obj.name|Camelize }}();
    {% endfor %}
} // namespace mozilla::glean_pings

#endif  // mozilla_glean_Pings_h
