buildscript {
    repositories {
        maven {
            url "https://maven.mozilla.org/maven2"
        }
        google()
        mavenCentral()

    }
    ext{
        groupName = 'org.mozilla.firefox.vpn'
        try{
            if(qtAndroidDir){
                print("Android Location for wg")
            }
            WG_TOOLS_DIR= "../../../../../3rdparty/wireguard-tools"
        }catch(Exception ignored){
            // This is checked from <proj>/android/daemon/tunnel
            WG_TOOLS_DIR= "../../../3rdparty/wireguard-tools"

        }

    }

    dependencies {
        classpath SharedDependencies.com_android_tools_build_gradle
        classpath "org.mozilla.components:tooling-glean-gradle:107.0.2"
    }
}

plugins {
    id "com.jetbrains.python.envs" version "0.0.26"
}


apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "org.mozilla.telemetry.glean-gradle-plugin"


android {
    compileSdkVersion Config.compileSdkVersion
    ndkVersion Config.ndkVersion
    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField  "String", "VERSIONCODE" ,  '"' +System.getenv("VERSIONCODE") + '"'
        buildConfigField  "String", "SHORTVERSION" ,  '"' + System.getenv("SHORTVERSION") +  '"'
    }
    buildFeatures {
        buildConfig = true
    }
    sourceSets {
        main {
            res.srcDirs =  ["res"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path 'tunnel/CMakeLists.txt'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${groupName}.debug",
                              "-DGRADLE_USER_HOME=${project.gradle.gradleUserHomeDir},",
                              "-DCMAKE_WG_TOOLS_DIR=${WG_TOOLS_DIR}"
                }
            }
        }
        release {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${groupName}",
                              "-DGRADLE_USER_HOME=${project.gradle.gradleUserHomeDir}",
                              "-DCMAKE_WG_TOOLS_DIR=${WG_TOOLS_DIR}"
                }
            }
        }
    }


}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation SharedDependencies.androidx_core
    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    implementation "androidx.security:security-identity-credential:1.0.0-alpha03"
    implementation "org.mozilla.telemetry:glean:51.6.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.20"
}

ext.gleanNamespace = "mozilla.telemetry.glean"
try{
    if(qtAndroidDir){}
    // We're reunning gradle via qmake in .tmp/src/android-build
    ext.gleanYamlFiles = ["$rootDir/../../../glean/metrics.yaml", "$rootDir/../../../glean/pings.yaml"]
}catch(Exception ignored){
    // We running gradle from /android
    ext.gleanYamlFiles = ["$rootDir/../glean/metrics.yaml", "$rootDir/../glean/pings.yaml"]
}