buildscript {
    repositories {
        maven {
            url "https://maven.mozilla.org/maven2"
        }
        google()
        mavenCentral()
    }
    ext{
        groupName = 'org.mozilla.firefox.vpn'
        try{
            if (qtAndroidDir) {
                print("Android Location for wg")
            }

            WG_TOOLS_DIR= "../../../../../3rdparty/wireguard-tools"
        } catch (Exception ignored) {
            // This is checked from <proj>/android/daemon/tunnel
            WG_TOOLS_DIR= "../../../3rdparty/wireguard-tools"
        }
    }

    dependencies {
        classpath SharedDependencies.com_android_tools_build_gradle
        classpath "org.mozilla.telemetry:glean-gradle-plugin:52.7.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "com.jetbrains.python.envs" version "0.0.31"
}

apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"

apply plugin: "org.mozilla.telemetry.glean-gradle-plugin"

ext.gleanNamespace = "mozilla.telemetry.glean"
ext.gleanYamlFiles = [
    "$rootDir/../../../src/telemetry/metrics.yaml",
    "$rootDir/../../../src/telemetry/interaction_metrics.yaml",
    "$rootDir/../../../src/telemetry/impression_metrics.yaml",
    "$rootDir/../../../src/telemetry/outcome_metrics.yaml",
    "$rootDir/../../../src/telemetry/pings.yaml"
]

android {
    compileSdkVersion Config.compileSdkVersion
    ndkVersion Config.ndkVersion
    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion

        buildConfigField  "String", "VERSIONCODE" ,  '"' +System.getenv("VERSIONCODE") + '"'
        buildConfigField  "String", "SHORTVERSION" ,  '"' + System.getenv("SHORTVERSION") +  '"'
        buildConfigField  "String", "ADJUST_SDK_TOKEN" ,  '"' + (project.properties["adjusttoken"] ?: "no_token_found") +  '"'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig = true
    }

    sourceSets {
        main {
            res.srcDirs =  ["res"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path 'tunnel/CMakeLists.txt'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${groupName}.debug",
                              "-DGRADLE_USER_HOME=${project.gradle.gradleUserHomeDir}",
                              "-DCMAKE_WG_TOOLS_DIR=${WG_TOOLS_DIR}"
                }
            }
        }

        release {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${groupName}",
                              "-DGRADLE_USER_HOME=${project.gradle.gradleUserHomeDir}",
                              "-DCMAKE_WG_TOOLS_DIR=${WG_TOOLS_DIR}"
                }
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation project(path: ':daemon')
    testImplementation 'org.json:json:20140107'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation SharedDependencies.androidx_core
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.0"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")

    implementation project(path: ':qtglean')
    implementation project(path: ':common')
}
